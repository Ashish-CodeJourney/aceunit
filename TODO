* Create global build.xml for Building releases.
* Improve website layout (make it similar to that of Japi, Gridarta etc.).
* Make better distinction between public API and internal symbols even in header files.

* Alternatively allow for naming schemes instead of annotations so users can go without the A_Test annotations.
* Turn runFixture in a non-void function that returns whether one or more test cases failed.
* Add randomization of test order.
* Add JUnit-compatible loggers.
* Add proper runner tree that makes makes use of every logger method.
* Add generation of main()
* Support performance tests by measuring the time for tests.
* Support looping of tests for performance tests.
* Support fork() in the runner, just like check.
* Rename all symbols to have a pseudo-namespace.
* Add groups which are an orthogonal grouping system to the tree of suites with fixtures with testcases.
* Extend the runner to get information about what to run.
* Extend the runner to optionally use fork() like check.
* Add a library for C to access the mapping table.
* Add a library for Java to access the mapping table.
* Modularize unit test Makefiles in order to support multiple compilers.
* Use the modularization even for the output.
* Support gcc (implicitely done).
* Support armcc (Keil).
* Support ucc (CalmSHINE16).
* Support C251 (Keil C251).
* Test the behavior of AceUnit with respect to LTO - Link Time Optimization.
* Improve support for C++, i.e. provide constructors for structs.
* Optionally auto-detect the version of C.
* Work with static link libraries.
* Auto-detect "embedded" by checking if __STDC_HOSTED__ is defined.

* Change documentation generation from Saxon to xsltproc (it's simple enough, XSLT 2.0 shouldn't be required).
* The DTDs, if required, should be downloaded automatically instead of having them checked-in.

* When a file is written, and writing is skipped because the content didn't change, it should be checked whether the source is newer, otherwise this can confuse make.
